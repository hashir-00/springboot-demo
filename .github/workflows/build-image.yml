name: Build, Push, and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: hashirhalaldeen00/demo:latest

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Pull latest image
            docker pull hashirhalaldeen00/demo:latest

            # Stop and remove the existing container if running
            docker stop my-app || true
            docker rm my-app || true

            # Run the new container with environment variables
            docker run -d --name my-app -p 8080:8080 \
              --env MY_DB_URL=${{ secrets.MY_DB_URL }} \
              --env MY_DB_USERNAME=${{ secrets.MY_DB_USERNAME }} \
              --env MY_DB_PASSWORD=${{ secrets.MY_DB_PASSWORD }} \
              --env MY_GITHUB_OAUTH_CLIENT_ID=${{ secrets.MY_GITHUB_OAUTH_CLIENT_ID }} \
              --env MY_GITHUB_OAUTH_CLIENT_SECRET=${{ secrets.MY_GITHUB_OAUTH_CLIENT_SECRET }} \
              --env MY_SERVER_PORT=${{ secrets.MY_SERVER_PORT }} \
              --env MY_JWT_SECURITY_KEY=${{ secrets.MY_JWT_SECURITY_KEY }} \
              --env MY_JWT_SECURITY_KEY_EXP_TIME=${{ secrets.MY_JWT_SECURITY_KEY_EXP_TIME }} \
              --env MY_REFRESH_TOKEN_TTL=${{ secrets.MY_REFRESH_TOKEN_TTL }} \
              --env MY_CLIENT_URL=${{ secrets.MY_CLIENT_URL }} \
              --env MY_GOOGLE_DRIVE_ID=${{ secrets.MY_GOOGLE_DRIVE_ID }} \
              --env MY_APPLICATION_NAME=${{ secrets.MY_APPLICATION_NAME }} \
              hashirhalaldeen00/demo:latest

            # Remove unused images to free up space
            docker system prune -af
